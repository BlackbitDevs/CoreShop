name: Behat UI
on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  behat_ui:
    runs-on: ubuntu-latest
    env:
      APP_ENV: "test"
      CORESHOP_SKIP_DB_SETUP: "1"
      PIMCORE_TEST_DB_DSN: "mysql://root:root@127.0.0.1:3306/coreshop_test"
      PIMCORE_INSTALL_ADMIN_USERNAME: "admin"
      PIMCORE_INSTALL_ADMIN_PASSWORD: "admin"
      PIMCORE_INSTALL_MYSQL_HOST_SOCKET: "127.0.0.1"
      PIMCORE_INSTALL_MYSQL_USERNAME: "root"
      PIMCORE_INSTALL_MYSQL_PASSWORD: "root"
      PIMCORE_INSTALL_MYSQL_DATABASE: "coreshop_test"
      PIMCORE_INSTALL_MYSQL_PORT: "3306"
      PANTHER_EXTERNAL_BASE_URI: "http://localhost:9080/index_test.php"
      PANTHER_CHROME_ARGUMENTS: "--disable-dev-shm-usage"
      PIMCORE_KERNEL_CLASS: 'Kernel'
      PIMCORE_CLASS_DIRECTORY: 'var/tmp/behat/var/classes'
      PIMCORE_WRITE_TARGET_STATICROUTES: 'settings-store'

    strategy:
      matrix:
        php: [ 8.0, 8.1 ]
        pimcore: [ ^10.4, 10.x-dev ]
        dependencies: [ highest, lowest ]
        exclude:
          - php: 8.1
            dependencies: lowest

    services:
      database:
        image: "mariadb:10.5"
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    name: "${{ matrix.pimcore }}, PHP ${{ matrix.php }}, Deps ${{ matrix.dependencies }}"

    steps:
    - uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
        extensions: intl, gd, simpleXML, dom, exif, fileinfo, iconv, mbstring, mysqli, pdo_mysql, zip, zlib
        tools: symfony

    - name: Check PHP Version
      run: php -v

    - name: Setup DB
      run: |
        mysql --host 127.0.0.1 --port ${{ job.services.database.ports['3306'] }} -uroot -proot -e "CREATE DATABASE coreshop_test CHARSET=utf8mb4;"

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-

    - if: matrix.dependencies == 'highest'
      name: Install dependencies highest
      run: |
        composer req pimcore/pimcore:${{ matrix.pimcore }} --no-interaction --no-scripts --no-update
        composer require --no-update symfony/asset:^6.0 symfony/browser-kit:^6.0 symfony/cache:^6.0 symfony/cache:^6.0 symfony/cache:^6.0 symfony/config:^6.0 symfony/console:^6.0 symfony/css-selector:^6.0 symfony/dependency-injection:^6.0 symfony/debug-bundle:^6.0 symfony/doctrine-bridge:^6.0 symfony/dom-crawler:^6.0 symfony/dotenv:^6.0 symfony/error-handler:^6.0 symfony/event-dispatcher:^6.0 symfony/expression-language:^6.0 symfony/filesystem:^6.0 symfony/finder:^6.0 symfony/form:^6.0 symfony/framework-bundle:^6.0 symfony/http-client:^6.0 symfony/http-foundation:^6.0 symfony/http-kernel:^6.0 symfony/inflector:^6.0 symfony/intl:^6.0 symfony/lock:^6.0 symfony/mailer:^6.0 symfony/messenger:^6.0 symfony/mime:^6.0 symfony/monolog-bridge:^6.0 symfony/notifier:^6.0 symfony/options-resolver:^6.0 symfony/password-hasher:^6.0 symfony/process:^6.0 symfony/property-access:^6.0 symfony/property-info:^6.0 symfony/proxy-manager-bridge:^6.0 symfony/rate-limiter:^6.0 symfony/routing:^6.0 symfony/security-bundle:^6.0 symfony/security-core:^6.0 symfony/security-csrf:^6.0 symfony/security-guard:^6.0 symfony/security-http:^6.0 symfony/semaphore:^6.0 symfony/serializer:^6.0 symfony/stopwatch:^6.0 symfony/string:^6.0 symfony/templating:^6.0 symfony/translation:^6.0 symfony/twig-bridge:^6.0 symfony/twig-bundle:^6.0 symfony/uid:^6.0 symfony/validator:^6.0 symfony/var-dumper:^6.0 symfony/var-exporter:^6.0 symfony/web-link:^6.0 symfony/web-profiler-bundle:^6.0 symfony/workflow:^6.0 symfony/yaml:^6.0
        composer update --no-progress --prefer-dist --optimize-autoloader

    - if: matrix.dependencies == 'lowest'
      name: Install dependencies lowest
      run: |
        composer req pimcore/pimcore:${{ matrix.pimcore }} --no-interaction --no-scripts --no-update
        composer require --no-update symfony/asset:^5.4 symfony/browser-kit:^5.4 symfony/cache:^5.4 symfony/cache:^5.4 symfony/cache:^5.4 symfony/config:^5.4 symfony/console:^5.4 symfony/css-selector:^5.4 symfony/dependency-injection:^5.4 symfony/debug-bundle:^5.4 symfony/doctrine-bridge:^5.4 symfony/dom-crawler:^5.4 symfony/dotenv:^5.4 symfony/error-handler:^5.4 symfony/event-dispatcher:^5.4 symfony/expression-language:^5.4 symfony/filesystem:^5.4 symfony/finder:^5.4 symfony/form:^5.4 symfony/framework-bundle:^5.4 symfony/http-client:^5.4 symfony/http-foundation:^5.4 symfony/http-kernel:^5.4 symfony/inflector:^5.4 symfony/intl:^5.4 symfony/lock:^5.4 symfony/mailer:^5.4 symfony/messenger:^5.4 symfony/mime:^5.4 symfony/monolog-bridge:^5.4 symfony/notifier:^5.4 symfony/options-resolver:^5.4 symfony/password-hasher:^5.4 symfony/process:^5.4 symfony/property-access:^5.4 symfony/property-info:^5.4 symfony/proxy-manager-bridge:^5.4 symfony/rate-limiter:^5.4 symfony/routing:^5.4 symfony/security-bundle:^5.4 symfony/security-core:^5.4 symfony/security-csrf:^5.4 symfony/security-guard:^5.4 symfony/security-http:^5.4 symfony/semaphore:^5.4 symfony/serializer:^5.4 symfony/stopwatch:^5.4 symfony/string:^5.4 symfony/templating:^5.4 symfony/translation:^5.4 symfony/twig-bridge:^5.4 symfony/twig-bundle:^5.4 symfony/uid:^5.4 symfony/validator:^5.4 symfony/var-dumper:^5.4 symfony/var-exporter:^5.4 symfony/web-link:^5.4 symfony/web-profiler-bundle:^5.4 symfony/workflow:^5.4 symfony/yaml:^5.4
        composer update --no-progress --prefer-dist --optimize-autoloader --prefer-lowest

    - name: Cache clear
      run: bin/console cache:clear

    - name: Assets Install
      run: bin/console assets:install --symlink

    - name: Install Pimcore
      run: PIMCORE_KERNEL_CLASS=Kernel vendor/bin/pimcore-install --ignore-existing-config --env=test --skip-database-config

    - name: Install CoreShop
      run: |
        bin/console coreshop:install
        composer dump-autoload

    - name: Install Browser Drivers
      run: vendor/bin/bdi detect drivers

    - name: Run Symfony Webserver
      run: symfony server:start --port=9080 --dir=public --daemon --no-tls

    - name: Run Behat
      run: vendor/bin/behat --strict --no-interaction -vvv --config behat.yml.dist -p ui

    - name: Upload Behat logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: "Behat logs (non-JS, PHP ${{ matrix.php }}, Symfony ${{ matrix.pimcore }})"
        path: etc/build/
        if-no-files-found: ignore

    - name: Upload Pimcore logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: "Pimcore logs (non-JS, PHP ${{ matrix.php }}, Symfony ${{ matrix.pimcore }})"
        path: var/log/
        if-no-files-found: ignore
