name: Static Tests (Lint, Stan)
on:
  push:
    branches: [ master, '2.2' ]
  pull_request:
    branches: [ master, '2.2' ]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      APP_ENV: "test"
      PIMCORE_TEST_DB_DSN: "mysql://root:root@127.0.0.1:3306/coreshop_test"

    strategy:
      matrix:
        php: [ 8.0, 8.1 ]
        pimcore: [ ^10.4, 10.x-dev ]
        dependencies: [ highest, lowest ]
        exclude:
          - php: 8.1
            dependencies: lowest

    name: "${{ matrix.pimcore }}, PHP ${{ matrix.php }}, Deps ${{ matrix.dependencies }}"

    steps:
    - uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
        extensions: intl, gd, simpleXML, dom, exif, fileinfo, iconv, mbstring, mysqli, pdo_mysql, zip, zlib

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-

    - if: matrix.dependencies == 'highest'
      name: Install dependencies highest
      run: |
        composer req pimcore/pimcore:${{ matrix.pimcore }} --no-interaction --no-scripts --no-update
        composer update --no-progress --prefer-dist --optimize-autoloader

    - if: matrix.dependencies == 'lowest'
      name: Install dependencies lowest
      run: |
        composer req pimcore/pimcore:${{ matrix.pimcore }} --no-interaction --no-scripts --no-update
        composer update --no-progress --prefer-dist --optimize-autoloader --prefer-lowest

    - name: Validate YAML
      run: bin/console lint:yaml src

    - name: Validate TWIG
      run: bin/console lint:twig src

    - name: Validate Doctrine Settings
      run: bin/console doctrine:schema:validate --skip-sync

    - name: STAN
      run: |
        cp -f config/packages/stan/config.yaml config/packages/dev/config.yaml
        bin/console cache:clear --env=dev
        vendor/bin/phpstan analyse -c phpstan.neon src -l 3

    - name: PSALM
      run: |
        vendor/bin/psalm
